# -*- coding: utf-8 -*-
"""Creating a Distance Matrix.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b470wp9GHSbV24ny_-DkNqJd2ZqrvoAY
"""

import os
os.chdir('c:/Users/mjmah/OneDrive/Desktop/everything/Main/term7/bio/HWs/HW1/q6')
class DNA:
  def __init__(self):
    self.string = ""
  def add_neucleotide(self, to_add):
    self.string += to_add

import numpy as np
all_DNAs = []
last_dna = None
with open('rosalind_pdst.txt', 'r') as file:
  for dna in file:
    dna = dna.strip()
    if dna.startswith('>'):
      last_dna = DNA()
      all_DNAs.append(last_dna)
    else:
      last_dna.add_neucleotide(dna)

def calc_dist(one, two):
  val= sum(list(map(int, np.array(list(one.string)) == np.array(list(two.string))))) / len(one.string)
  return val

similarity_scores = [[0.0 for x in range(len(all_DNAs))] for x in range(len(all_DNAs))]
for i in range(len(all_DNAs)):
  for j in range(len(all_DNAs)):
    dna_1 = all_DNAs[i]
    dna_2 = all_DNAs[j]
    similarity_scores[i][j] = 1.0000 - calc_dist(dna_1, dna_2)
    # print(similarity_scores[i][j])

for x in range(len(similarity_scores)):
  for y in range(len(similarity_scores)):
    print(similarity_scores[x][y], end=' ')
  print()